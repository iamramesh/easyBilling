<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:Telerik_Windows_Controls_MaskedTextBox="clr-namespace:Telerik.Windows.Controls.MaskedTextBox;assembly=Telerik.Windows.Controls.Input">

    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="#FF7A7A7A" />
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="TextBlockStyleMsg" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#FF3E3E3E" />
    </Style>

    <Style x:Key="TextBlockStyleMsgHighLight" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="#FF3E3E3E" />
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="TextBlockStyle1" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#6E4005" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="TextBlockStyle2" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#6E4005" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <Style x:Key="TextBlockStyle_msg" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#FF7A7A7A" />
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="TextBlockStyle_search" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="2"/>
    </Style>

    <Style x:Key="TextBlockStyle_Widget1" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="0,5,0,0" />
    </Style>

    <Style x:Key="TextBlockStyle_Widget2" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="0,0,0,5" />
    </Style>

    <!--Styles for TAbCONTROL=======================================================================================-->

    <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.Row="0" Background="Transparent" BorderBrush="Gray" BorderThickness="0,0,0,1">
                            <ContentPresenter ContentSource="SelectedContent"/>

                            <!--<Border.Effect>
                                <DropShadowEffect ShadowDepth="0"/>
                            </Border.Effect>-->
                        </Border>
                        <TabPanel IsItemsHost="True" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,10,5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <!--<ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter1">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#FFD6D6D6"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="OnMouseLeave1">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                <SplineColorKeyFrame KeyTime="0:0:0.2" Value="#00FFFFFF"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>-->

                    <Border Name="border" CornerRadius="0,0,5,5" Background="#00FFFFFF" Margin="3,1,3,0" BorderBrush="Gray" BorderThickness="0">
                        <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="20,3,20,3" 
                                          TextBlock.FontSize="12" TextBlock.FontWeight="Bold" TextBlock.Foreground="#FF7A7A7A" 
                                          RecognizesAccessKey="True"/>
                        <!--<Border.Effect>
                            <DropShadowEffect ShadowDepth="0" Opacity="1"/>
                        </Border.Effect>-->
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#CCF3F3F3" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="border" Property="Margin" Value="3,-1,3,0" />
                        </Trigger>

                        <!--<EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource OnMouseLeave1}"/>
                        </EventTrigger>-->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
        <Grid IsItemsHost="True"/>
    </ItemsPanelTemplate>

    <!--Styles for LISTBOX=======================================================================================-->

    <SolidColorBrush x:Key="ListBorder" Color="#828790"/>

    <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="#FFBABABA"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true"
							Margin="1">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="Gray"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="Gray"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="ItemsPanelTemplate2">
        <VirtualizingStackPanel IsItemsHost="True"/>
    </ItemsPanelTemplate>

    <DataTemplate x:Key="ListBox_DataTemplate">
        <Grid>
            <TextBlock Text="{Binding Path=Name, Mode=OneWay}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ListBox_DataTemplate1">
        <Grid>
            <TextBlock Text="{Binding Path=AirNo, Mode=OneWay}"/>
        </Grid>
    </DataTemplate>

    <!--Styles for Search TextBox=======================================================================================-->

    <Style x:Key="Search_TextBoxStyle" TargetType="{x:Type telerik:RadMaskedTextBox}">
        <Setter Property="Mask" Value="aaaa"/>
        <Setter Property="MaskType" Value="Standard"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="#FF848484"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="Placeholder" Value="_"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2,0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadMaskedTextBox}">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="InnerBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1">
                            <Grid>
                                <Telerik_Windows_Controls_MaskedTextBox:ExtendedTextBox x:Name="PART_ExtendedTextBox" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="True" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="{TemplateBinding Padding}" TabIndex="{TemplateBinding TabIndex}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Border x:Name="EmptyContentPresenter" IsHitTestVisible="False" Visibility="Collapsed">
                                    <Grid>
                                        <ContentControl Grid.Column="0" x:Name="ContentElement" ContentTemplate="{TemplateBinding EmptyContentTemplate}" Content="{TemplateBinding EmptyContent}" Foreground="{TemplateBinding Foreground}" FontStyle="Italic" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Grid Height="10" Width="8" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,6,0">
                                            <Ellipse Stroke="Black" Margin="0,0,1,3"/>
                                            <Rectangle Fill="Black" StrokeThickness="0" HorizontalAlignment="Right" Margin="0,0,0.5,-0.25" 
                                                           VerticalAlignment="Bottom" Width="1" Height="5" RenderTransformOrigin="0.5,0.5">
                                                <Rectangle.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform />
                                                        <SkewTransform />
                                                        <RotateTransform Angle="-38.541" />
                                                        <TranslateTransform />
                                                    </TransformGroup>
                                                </Rectangle.RenderTransform>
                                            </Rectangle>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="FocusedVisual" BorderBrush="#FFFFC92B" BorderThickness="1" CornerRadius="1" Visibility="Collapsed"/>
                        <Border x:Name="DisabledVisual" BorderBrush="#FF989898" BorderThickness="1" CornerRadius="1" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Visibility" TargetName="FocusedVisual" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#FFFFC92B"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                <Condition Property="IsEmpty" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="EmptyContentPresenter" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="DisabledVisual" Value="Visible"/>
                            <Setter Property="Foreground" TargetName="ContentElement" Value="#FF8D8D8D"/>
                            <Setter Property="Foreground" TargetName="PART_ExtendedTextBox" Value="#FF8D8D8D"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Styles for Validation Control Template=======================================================================================-->


    <!--<Style TargetType="{x:Type telerikInput:RadMaskedTextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Background" Value="Pink"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True" 
                               ToolTip="{Binding ElementName=controlWithError,Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                        <TextBlock DockPanel.Dock="Right" Foreground="Red" FontSize="14pt" Margin="-15,0,0,0" FontWeight="Bold">
                            *
                        </TextBlock>
                        
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder Name="controlWithError" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style TargetType="{x:Type telerikInput:RadMaskedTextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Background" Value="Pink"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>

        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <AdornedElementPlaceholder x:Name="Holder"/>
                            <Border Background="Red" Margin="2,0,0,0">
                                <TextBlock Text="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" 
                                           Margin="2" Foreground="White" Padding="5,1,5,1"/>
                            </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Color x:Key="ValidationColor1">#052A2E31</Color>
    <Color x:Key="ValidationColor2">#152A2E31</Color>
    <Color x:Key="ValidationColor3">#252A2E31</Color>
    <Color x:Key="ValidationColor4">#352A2E31</Color>
    <Color x:Key="ValidationColor5">#FFDC000C</Color>
    <Color x:Key="BaseColor2">#FFFFFFFF</Color>

    <SolidColorBrush x:Key="ValidationBrush1" Color="{StaticResource ValidationColor1}"/>
    <SolidColorBrush x:Key="ValidationBrush2" Color="{StaticResource ValidationColor2}"/>
    <SolidColorBrush x:Key="ValidationBrush3" Color="{StaticResource ValidationColor3}"/>
    <SolidColorBrush x:Key="ValidationBrush4" Color="{StaticResource ValidationColor4}"/>
    <SolidColorBrush x:Key="ValidationBrush5" Color="{StaticResource ValidationColor5}"/>
    <SolidColorBrush x:Key="BlankBackgroundBrush" Color="{StaticResource BaseColor2}" />

    <!--<Style TargetType="{x:Type telerikInput:RadMaskedTextBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <AdornedElementPlaceholder x:Name="Holder"/>
                        <Grid Margin="2,0,0,0">
                            <Border Background="{StaticResource ValidationBrush1}" CornerRadius="5" Margin="4,4,-4,-4"/>
                            <Border Background="{StaticResource ValidationBrush2}" CornerRadius="4" Margin="3,3,-3,-3"/>
                            <Border Background="{StaticResource ValidationBrush3}" CornerRadius="3" Margin="2,2,-2,-2"/>
                            <Border Background="{StaticResource ValidationBrush4}" CornerRadius="2" Margin="1,1,-1,-1"/>
                            <Border Background="{StaticResource ValidationBrush5}" CornerRadius="2"/>
                            <Border Background="{StaticResource ValidationBrush5}" CornerRadius="2">
                                <TextBlock Foreground="{StaticResource BlankBackgroundBrush}" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" 
                                           Text="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
                            </Border>
                        </Grid>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style TargetType="{x:Type telerik:RadMaskedTextBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <AdornedElementPlaceholder x:Name="Holder"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <Polygon Grid.Column="0" Points="0,0 0,2 1,1" Width="5" Height="10" 
										Stretch="Fill"
										Fill="{StaticResource ValidationBrush5}"
										VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
                                <Polygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                        <SkewTransform AngleY="0" AngleX="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Polygon.RenderTransform>
                            </Polygon>

                            <Border Grid.Column="1" Background="{StaticResource ValidationBrush5}">
                                <TextBlock Foreground="{StaticResource BlankBackgroundBrush}" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" 
                                           Text="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
                            </Border>
                        </Grid>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="{x:Type telerik:RadMaskedTextBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <AdornedElementPlaceholder x:Name="Holder"/>

                        <TextBlock Foreground="Red" Margin="0" TextWrapping="Wrap" UseLayoutRounding="false" VerticalAlignment="Center"
                                   Text="!" ToolTip="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                   FontSize="17" FontWeight="Bold"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type telerik:RadDatePicker}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <AdornedElementPlaceholder x:Name="Holder"/>

                        <TextBlock Foreground="Red" Margin="0" TextWrapping="Wrap" UseLayoutRounding="false" VerticalAlignment="Center"
                                   Text="!" ToolTip="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                   FontSize="17" FontWeight="Bold"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type telerik:RadNumericUpDown}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <AdornedElementPlaceholder x:Name="Holder"/>

                        <TextBlock Foreground="Red" Margin="0" TextWrapping="Wrap" UseLayoutRounding="false" VerticalAlignment="Center"
                                   Text="!" ToolTip="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                   FontSize="17" FontWeight="Bold"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type telerik:RadComboBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <AdornedElementPlaceholder x:Name="Holder"/>

                        <TextBlock Foreground="Red" Margin="0" TextWrapping="Wrap" UseLayoutRounding="false" VerticalAlignment="Center"
                                   Text="!" ToolTip="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                   FontSize="17" FontWeight="Bold"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>